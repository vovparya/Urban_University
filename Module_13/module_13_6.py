'''
–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ —Ç–µ–º–µ "–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã".
–¶–µ–ª—å: –Ω–∞—É—á–∏—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–∏—Ö –≤ Telegram-bot.

–ó–∞–¥–∞—á–∞ "–ï—â—ë –±–æ–ª—å—à–µ –≤—ã–±–æ—Ä–∞":
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –ø—Ä–∏—Å—ã–ª–∞–ª–∞—Å—å Inline-–∫–ª–∞–≤–∏–∞—Ç—Ä—É–∞.
–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É InlineKeyboardMarkup —Å 2 –∫–Ω–æ–ø–∫–∞–º–∏ InlineKeyboardButton:
–° —Ç–µ–∫—Å—Ç–æ–º '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π' –∏ callback_data='calories'
–° —Ç–µ–∫—Å—Ç–æ–º '–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞' –∏ callback_data='formulas'
–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é main_menu(message), –∫–æ—Ç–æ—Ä–∞—è:
–ë—É–¥–µ—Ç –æ–±—ë—Ä–Ω—É—Ç–∞ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä message_handler, —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —Ç–µ–∫—Å—Ç–∞ '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'.
–°–∞–º–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–µ Inline –º–µ–Ω—é –∏ —Ç–µ–∫—Å—Ç '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:'
–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é get_formulas(call), –∫–æ—Ç–æ—Ä–∞—è:
–ë—É–¥–µ—Ç –æ–±—ë—Ä–Ω—É—Ç–∞ –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä callback_query_handler, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç 'formulas'.
–ë—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—É–ª–æ–π –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞.
–ò–∑–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é set_age –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –Ω–µ—ë:
–î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å–º–µ–Ω–∏—Ç–µ –Ω–∞ callback_query_handler, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç 'calories'.
–¢–µ–ø–µ—Ä—å —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ message, –∞ call. –î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º - call.message.
–ü–æ –∏—Ç–æ–≥—É –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º:
–í–≤–æ–¥–∏—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ /start
–ù–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –∏ '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'.
–í –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è Inline –º–µ–Ω—é: '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π' –∏ '–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞'
–ü–æ Inline –∫–Ω–æ–ø–∫–µ '–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞' –ø—Ä–∏—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—É–ª–æ–π.
–ü–æ Inline –∫–Ω–æ–ø–∫–µ '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π' –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –º–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ —Ü–µ–ø–æ—á–∫–µ.
__________________________________________________________________________________________________________
'''

from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

API_KEY = '***********************************************'
bot = Bot(token=API_KEY)
dp = Dispatcher(bot, storage=MemoryStorage())


class UserState(StatesGroup):
    age = State()
    growth = State()
    weight = State()


keyboard_start = ReplyKeyboardMarkup(resize_keyboard=True).add(
    KeyboardButton('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'), KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
)

keyboard_inline = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton('–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π', callback_data='calories'),
    InlineKeyboardButton('–§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á—ë—Ç–∞', callback_data='formulas')
)

keyboard_gender = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton('–ú—É–∂—á–∏–Ω–∞', callback_data='gender_male'),
    InlineKeyboardButton('–ñ–µ–Ω—â–∏–Ω–∞', callback_data='gender_female')
)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –ø–æ–º–æ–≥–∞—é—â–∏–π —Ç–≤–æ–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é. üòä", reply_markup=keyboard_start)


@dp.message_handler(text='–†–∞—Å—Å—á–∏—Ç–∞—Ç—å')
async def main_menu(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=keyboard_inline)


@dp.callback_query_handler(text='formulas')
async def get_formulas(call: types.CallbackQuery):
    formula = "**–§–æ—Ä–º—É–ª–∞ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞:**\n" \
              "–î–ª—è –º—É–∂—á–∏–Ω: (10 x –≤–µ—Å –≤ –∫–≥) + (6.25 x —Ä–æ—Å—Ç –≤ —Å–º) - (5 x –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö) + 5\n" \
              "–î–ª—è –∂–µ–Ω—â–∏–Ω: (10 x –≤–µ—Å –≤ –∫–≥) + (6.25 x —Ä–æ—Å—Ç –≤ —Å–º) - (5 x –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö) - 161"
    await call.message.answer(formula)


@dp.callback_query_handler(text='calories')
async def ask_gender(call: types.CallbackQuery):
    await call.message.answer('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:', reply_markup=keyboard_gender)


@dp.callback_query_handler(lambda c: c.data.startswith('gender_'))
async def set_age(call: types.CallbackQuery, state: FSMContext):
    if call.data == 'gender_male':
        gender = 1  # –ú—É–∂—á–∏–Ω–∞
    else:
        gender = 2  # –ñ–µ–Ω—â–∏–Ω–∞

    await state.update_data(gender=gender)
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:')
    await UserState.age.set()


@dp.message_handler(state=UserState.age)
async def set_growth(message: types.Message, state: FSMContext):
    try:
        age = int(message.text)
        if age <= 0:
            raise ValueError
        await state.update_data(age=age)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö):')
        await UserState.growth.set()
    except ValueError:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è).')


@dp.message_handler(state=UserState.growth)
async def set_weight(message: types.Message, state: FSMContext):
    try:
        growth = int(message.text)
        if growth <= 0:
            raise ValueError
        await state.update_data(growth=growth)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö):')
        await UserState.weight.set()
    except ValueError:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç (—á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è).')


@dp.message_handler(state=UserState.weight)
async def calculate_calories(message: types.Message, state: FSMContext):
    try:
        weight = int(message.text)
        if weight <= 0:
            raise ValueError

        data = await state.get_data()
        age, growth, gender = data['age'], data['growth'], data['gender']

        if gender == 1:  # –ú—É–∂—á–∏–Ω–∞
            calories = (10 * weight) + (6.25 * growth) - (5 * age) + 5
        else:  # –ñ–µ–Ω—â–∏–Ω–∞
            calories = (10 * weight) + (6.25 * growth) - (5 * age) - 161

        await message.answer(f'–í–∞—à–∞ –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π: {round(calories)} –∫–∫–∞–ª')

    except ValueError:
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å (—á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è).')
    finally:
        await state.finish()


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
