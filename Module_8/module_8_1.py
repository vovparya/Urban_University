'''
Домашнее задание по уроку "Try и Except".

Задание "Программистам всё можно":
Пора разрушать шаблоны привычного нам Python! Вот вас раздражает, что мы не можем сложить число(int) и строку(str)?
Давайте исправим это недоразумение!

Реализуйте следующую функцию:
add_everything_up, будет складывать числа(int, float) и строки(str)

Описание функции:
add_everything_up(a, b) принимает a и b, которые могут быть как числами(int, float), так и строками(str).
TypeError - когда a и b окажутся разными типами (числом и строкой), то возвращать строковое представление этих двух
данных вместе (в том же порядке). Во всех остальных случаях выполнять стандартные действия.

Пример кода:
print(add_everything_up(123.456, 'строка'))
print(add_everything_up('яблоко', 4215))
print(add_everything_up(123.456, 7))

Вывод в консоль:
123.456строка
яблоко4215
130.456

Примечания:
Конструкции try-except в функции выполняют строго ту обработку, которая написана в задании (обращайте на важность
порядка передачи данных).
Если хотите дополнить функции своими исключениями или написать отдельно дополнительно собственные функции - это
не запрещено, мы не против, чтобы вы больше экспериментировали. Но в первую очередь выполните поставленную задачу.
____________________________________________________________________________________________
'''


# Основной код + дополнение ниже.
def add_everything_up(a, b, precision=3):
    if isinstance(a, (int, float)) and isinstance(b, (int, float)):
        return round(a + b, precision)
    elif isinstance(a, str) and isinstance(b, str):
        return a + b
    else:
        return str(a) + str(b)


'''
Код выше, впринципе выполняет условие задачи, на этом можно бы и закончить. Но, мы начали 8-й модуль с try-except и 
предположу, что задание подразумевает практику с этой конструкцией, раз в задании не запрещаются эксперименты, 
добавил ввод символов с клавиатуры.
'''

print(add_everything_up(123.456, 'строка'))
print(add_everything_up('яблоко', 4215))
print(add_everything_up(123.456, 7))

'''
____________________________________________________________________________________________
'''


# Дополнение к коду выше.

def get_user_input():
    a = input("Введите первое значение (число или строка): ")
    b = input("Введите второе значение (число или строка): ")

    try:
        a = float(a) if '.' in a else int(a)  # Преобразование введенных данных в float() или int()
        b = float(b) if '.' in b else int(b)
    except ValueError:
        pass  # Оставляем введенные символы как строку, если преобразование не удалось

    return a, b


a, b = get_user_input()
result = add_everything_up(a, b, precision=2)

print(f"Результат: {result}")
